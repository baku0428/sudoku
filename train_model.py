import numpy as np
import pandas as pd
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten, Reshape
from sklearn.model_selection import train_test_split

# üîπ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Sudoku
df = pd.read_csv("sudoku.csv")

# ‡πÅ‡∏õ‡∏•‡∏á‡∏õ‡∏£‡∏¥‡∏®‡∏ô‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå
X = np.array([list(map(int, list(p))) for p in df["quizzes"]])
y = np.array([list(map(int, list(s))) for s in df["solutions"]])

# ‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• train/test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)

# ‡∏£‡∏µ‡πÄ‡∏ä‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
X_train = X_train.reshape(-1, 9, 9, 1)
X_test = X_test.reshape(-1, 9, 9, 1)

# ‡πÅ‡∏õ‡∏•‡∏á `y_train` ‡πÄ‡∏õ‡πá‡∏ô One-Hot
num_classes = 10
y_train = tf.keras.utils.to_categorical(y_train, num_classes).reshape(-1, 9, 9, num_classes)
y_test = tf.keras.utils.to_categorical(y_test, num_classes).reshape(-1, 9, 9, num_classes)

# üîπ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•
model = Sequential([
    Flatten(input_shape=(9, 9, 1)),
    Dense(128, activation="relu"),
    Dense(256, activation="relu"),
    Dense(512, activation="relu"),
    Dense(9 * 9 * num_classes, activation="softmax"),
    Reshape((9, 9, num_classes))
])

# ‡∏Ñ‡∏≠‡∏°‡πÑ‡∏û‡∏•‡πå‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏£‡∏ô
model.compile(optimizer="adam", loss="categorical_crossentropy", metrics=["accuracy"])
model.fit(X_train, y_train, epochs=10, batch_size=32, validation_data=(X_test, y_test))

# üîπ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏°‡πÄ‡∏î‡∏•
model.save("sudoku_model.h5")
print("‚úÖ ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
